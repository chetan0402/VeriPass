// Code generated by ent, DO NOT EDIT.

package admin

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the admin type in the database.
	Label = "admin"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldHostel holds the string denoting the hostel field in the database.
	FieldHostel = "hostel"
	// FieldCanAddPass holds the string denoting the can_add_pass field in the database.
	FieldCanAddPass = "can_add_pass"
	// Table holds the table name of the admin in the database.
	Table = "admins"
)

// Columns holds all SQL columns for admin fields.
var Columns = []string{
	FieldID,
	FieldEmail,
	FieldName,
	FieldHostel,
	FieldCanAddPass,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Admin queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEmail orders the results by the email field.
func ByEmail(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEmail, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByHostel orders the results by the hostel field.
func ByHostel(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHostel, opts...).ToFunc()
}

// ByCanAddPass orders the results by the can_add_pass field.
func ByCanAddPass(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCanAddPass, opts...).ToFunc()
}
